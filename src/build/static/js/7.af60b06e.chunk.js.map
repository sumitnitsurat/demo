{"version":3,"sources":["helpers/index.js","helpers/rtc.js","components/StreamActions.js","components/MeetingRoom/Recording.js","components/MeetingRoom/index.js","helpers/events.js","components/HeaderPrimary.js"],"names":["moment","format","generateRandomString","Math","random","toString","slice","substring","closeVideo","elemId","document","getElementById","remove","this","adjustVideoElemSize","pageHasFocus","hidden","onfocusout","window","onpagehide","onblur","getQString","url","keyToReturn","location","href","queryStrings","decodeURIComponent","split","splittedQStrings","length","queryStringObj","forEach","keyValuePair","keyValue","userMediaAvailable","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","getUserFullMedia","mediaDevices","video","audio","echoCancellation","noiseSuppression","Error","getUserAudio","shareScreen","getDisplayMedia","cursor","sampleRate","getIceServer","iceServers","urls","username","credential","addChat","data","senderType","chatMsgDiv","querySelector","contentAlign","senderName","msgBg","sender","toggleChatNotificationBadge","infoDiv","createElement","className","innerHTML","colDiv","msg","rowDiv","appendChild","scrollIntoView","classList","contains","setAttribute","removeAttribute","replaceTrack","stream","recipientPeer","getSenders","find","s","track","kind","toggleShareIcons","share","shareIconElem","children","add","toggleVideoBtnDisabled","disabled","maximiseStream","e","elem","target","parentElement","previousElementSibling","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","singleStreamToggleMute","muted","saveRecordedStream","user","blob","Blob","type","file","File","unix","saveAs","toggleModal","id","show","el","style","display","setLocalStream","mirrorMode","localVidElem","srcObject","getElementsByClassName","totalRemoteVideosDesktop","newWidth","i","width","createDemoRemotes","str","total","testInterval","setInterval","newVid","autoplay","controlDiv","cardDiv","clearInterval","pc","socket","io","socketId","myStream","screen","recordedStream","mediaRecorder","loadRtc","meetingId","room","commElem","sessionStorage","getItem","attributes","removeNamedItem","init","createOffer","partnerName","RTCPeerConnection","h","getTracks","addTrack","then","catch","console","error","onnegotiationneeded","a","offer","setLocalDescription","emit","description","localDescription","to","onicecandidate","candidate","ontrack","streams","onconnectionstatechange","d","iceConnectionState","onsignalingstatechange","signalingState","log","stopSharingScreen","Promise","res","rej","stop","broadcastNewTracks","getAudioTracks","getVideoTracks","p","pName","on","engine","push","addIceCandidate","RTCIceCandidate","setRemoteDescription","RTCSessionDescription","createAnswer","answer","addEventListener","which","value","trim","preventDefault","sendMsg","setTimeout","enabled","readyState","record","state","recordScreen","recordVideo","resume","startRecording","MediaRecorder","mimeType","start","ondataavailable","onstop","onerror","screenStream","videoStream","StreamActions","props","zIndex","title","RecordingView","MeetingRoom","useParams","useState","isRecording","setIsRecording","useHistory","useEffect","chatElem","mainSecElem","helpers","pictureInPictureElement","exitPictureInPicture","requestPictureInPicture","isStarted","Button","variant","onClick","marginRight","volume","autoPlay","rows","placeholder","Header","sticky","Brand","alt","src","height","color","fontWeight"],"mappings":"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","file":"static/js/7.af60b06e.chunk.js","sourcesContent":["import moment from 'moment'; \nimport { saveAs } from 'file-saver';\nmoment().format(); \nexport default {\n    generateRandomString() {\n        return Math.random().toString( 36 ).slice( 2 ).substring( 0, 15 );\n    },\n\n\n    closeVideo( elemId ) {\n        if ( document.getElementById( elemId ) ) {\n            document.getElementById( elemId ).remove();\n            this.adjustVideoElemSize();\n        }\n    },\n\n\n    pageHasFocus() {\n        return !( document.hidden || document.onfocusout || window.onpagehide || window.onblur );\n    },\n\n\n    getQString( url = '', keyToReturn = '' ) {\n        url = url ? url : window.location.href;\n        let queryStrings = decodeURIComponent( url ).split( '#', 2 )[0].split( '?', 2 )[1];\n\n        if ( queryStrings ) {\n            let splittedQStrings = queryStrings.split( '&' );\n\n            if ( splittedQStrings.length ) {\n                let queryStringObj = {};\n\n                splittedQStrings.forEach( function ( keyValuePair ) {\n                    let keyValue = keyValuePair.split( '=', 2 );\n\n                    if ( keyValue.length ) {\n                        queryStringObj[keyValue[0]] = keyValue[1];\n                    }\n                } );\n\n                return keyToReturn ? ( queryStringObj[keyToReturn] ? queryStringObj[keyToReturn] : null ) : queryStringObj;\n            }\n\n            return null;\n        }\n\n        return null;\n    },\n\n\n    userMediaAvailable() {\n        return !!( navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia );\n    },\n\n\n    getUserFullMedia() {\n        if ( this.userMediaAvailable() ) {\n            return navigator.mediaDevices.getUserMedia( {\n                video: true,\n                audio: {\n                    echoCancellation: true,\n                    noiseSuppression: true\n                }\n            } );\n        }\n\n        else {\n            throw new Error( 'User media not available' );\n        }\n    },\n\n\n    getUserAudio() {\n        if ( this.userMediaAvailable() ) {\n            return navigator.mediaDevices.getUserMedia( {\n                audio: {\n                    echoCancellation: true,\n                    noiseSuppression: true\n                }\n            } );\n        }\n\n        else {\n            throw new Error( 'User media not available' );\n        }\n    },\n\n\n\n    shareScreen() {\n        if ( this.userMediaAvailable() ) {\n            return navigator.mediaDevices.getDisplayMedia( {\n                video: {\n                    cursor: \"always\"\n                },\n                audio: {\n                    echoCancellation: true,\n                    noiseSuppression: true,\n                    sampleRate: 44100\n                }\n            } );\n        }\n\n        else {\n            throw new Error( 'User media not available' );\n        }\n    },\n\n\n    getIceServer() {\n        return {\n            iceServers: [{   \n                urls: [ \"stun:ss-turn1.xirsys.com\" \n            ]}, {   \n                username: \"R44mgQPZ_HZxSXJbZRehQBjU_2rWIdq546HmpK958l_XrAj5rkK8e6Lt6_ssD8ULAAAAAF7kVy5zdW1pdGM=\",   \n                credential: \"14807cf8-ad2f-11ea-8c40-0242ac140004\",   \n                urls: [       \n                    \"turn:ss-turn1.xirsys.com:80?transport=udp\",       \n                    \"turn:ss-turn1.xirsys.com:3478?transport=udp\",       \n                    \"turn:ss-turn1.xirsys.com:80?transport=tcp\",       \n                    \"turn:ss-turn1.xirsys.com:3478?transport=tcp\",       \n                    \"turns:ss-turn1.xirsys.com:443?transport=tcp\",       \n                    \"turns:ss-turn1.xirsys.com:5349?transport=tcp\"   \n                ]\n            }]\n        };\n    },\n\n\n    addChat( data, senderType ) {\n        let chatMsgDiv = document.querySelector( '#chat-messages' );\n        let contentAlign = 'justify-content-end';\n        let senderName = 'You';\n        let msgBg = 'bg-white';\n\n        if ( senderType === 'remote' ) {\n            contentAlign = 'justify-content-start';\n            senderName = data.sender;\n            msgBg = '';\n\n            this.toggleChatNotificationBadge();\n        }\n\n        let infoDiv = document.createElement( 'div' );\n        infoDiv.className = 'sender-info';\n        infoDiv.innerHTML = `${ senderName } - ${ moment().format( 'Do MMMM, YYYY h:mm a' ) }`;\n\n        let colDiv = document.createElement( 'div' );\n        colDiv.className = `col-10 card chat-card msg ${ msgBg }`;\n        colDiv.innerHTML = data.msg;\n\n        let rowDiv = document.createElement( 'div' );\n        rowDiv.className = `row ${ contentAlign } mb-2`;\n\n\n        colDiv.appendChild( infoDiv );\n        rowDiv.appendChild( colDiv );\n\n        chatMsgDiv.appendChild( rowDiv );\n\n        /**\n         * Move focus to the newly added message but only if:\n         * 1. Page has focus\n         * 2. User has not moved scrollbar upward. This is to prevent moving the scroll position if user is reading previous messages.\n         */\n        if ( this.pageHasFocus ) {\n            rowDiv.scrollIntoView();\n        }\n    },\n\n\n    toggleChatNotificationBadge() {\n        if ( document.querySelector( '#chat-pane' ).classList.contains( 'chat-opened' ) ) {\n            document.querySelector( '#new-chat-notification' ).setAttribute( 'hidden', true );\n        }\n\n        else {\n            document.querySelector( '#new-chat-notification' ).removeAttribute( 'hidden' );\n        }\n    },\n\n\n\n    replaceTrack( stream, recipientPeer ) {\n        let sender = recipientPeer.getSenders ? recipientPeer.getSenders().find( s => s.track && s.track.kind === stream.kind ) : false;\n\n        return sender ? sender.replaceTrack( stream ) : '';\n    },\n\n\n\n    toggleShareIcons( share ) {\n        let shareIconElem = document.querySelector( '#share-screen' );\n\n        if ( share ) {\n            shareIconElem.setAttribute( 'title', 'Stop sharing screen' );\n            shareIconElem.children[0].classList.add( 'text-primary' );\n            shareIconElem.children[0].classList.remove( 'text-app' );\n        }\n\n        else {\n            shareIconElem.setAttribute( 'title', 'Share screen' );\n            shareIconElem.children[0].classList.add( 'text-app' );\n            shareIconElem.children[0].classList.remove( 'text-primary' );\n        }\n    },\n\n\n    toggleVideoBtnDisabled( disabled ) {\n        document.getElementById( 'toggle-video' ).disabled = disabled;\n    },\n\n\n    maximiseStream( e ) {\n        let elem = e.target.parentElement.previousElementSibling;\n\n        elem.requestFullscreen() || elem.mozRequestFullScreen() || elem.webkitRequestFullscreen() || elem.msRequestFullscreen();\n        // document.querySelector('#close-single-peer-btn').style.display = 'block';\n\n        // e.target.parentElement.previousElementSibling.classList.remove('remote-video');\n        // e.target.parentElement.previousElementSibling.classList.add('single-peer-video');\n\n        // //hide the other elements\n        // let remoteVideoElems = document.getElementsByClassName('remote-video');\n\n        // if(remoteVideoElems.length){\n        //     for(let i = 0; i < remoteVideoElems.length; i++){\n        //         remoteVideoElems[i].style.display = 'none';\n        //     }\n        // }\n    },\n\n\n    singleStreamToggleMute( e ) {\n        if ( e.target.classList.contains( 'fa-microphone' ) ) {\n            e.target.parentElement.previousElementSibling.muted = true;\n            e.target.classList.add( 'fa-microphone-slash' );\n            e.target.classList.remove( 'fa-microphone' );\n        }\n\n        else {\n            e.target.parentElement.previousElementSibling.muted = false;\n            e.target.classList.add( 'fa-microphone' );\n            e.target.classList.remove( 'fa-microphone-slash' );\n        }\n    },\n\n\n    saveRecordedStream( stream, user ) {\n        let blob = new Blob( stream, { type: 'video/webm' } );\n\n        let file = new File( [blob], `${ user }-${ moment().unix() }-record.webm` );\n\n        saveAs( file );\n    },\n\n\n    toggleModal( id, show ) {\n        let el = document.getElementById( id );\n\n        if ( show ) {\n            el.style.display = 'block';\n            el.removeAttribute( 'aria-hidden' );\n        }\n\n        else {\n            el.style.display = 'none';\n            el.setAttribute( 'aria-hidden', true );\n        }\n    },\n\n\n\n    setLocalStream( stream, mirrorMode = true ) {\n        const localVidElem = document.getElementById( 'local' );\n\n        localVidElem.srcObject = stream;\n        mirrorMode ? localVidElem.classList.add( 'mirror-mode' ) : localVidElem.classList.remove( 'mirror-mode' );\n    },\n\n\n    adjustVideoElemSize() {\n        let elem = document.getElementsByClassName( 'card' );\n        let totalRemoteVideosDesktop = elem.length;\n        let newWidth = totalRemoteVideosDesktop <= 2 ? '50%' : (\n            totalRemoteVideosDesktop == 3 ? '33.33%' : (\n                totalRemoteVideosDesktop <= 8 ? '25%' : (\n                    totalRemoteVideosDesktop <= 15 ? '20%' : (\n                        totalRemoteVideosDesktop <= 18 ? '16%' : (\n                            totalRemoteVideosDesktop <= 23 ? '15%' : (\n                                totalRemoteVideosDesktop <= 32 ? '12%' : '10%'\n                            )\n                        )\n                    )\n                )\n            )\n        );\n\n\n        for ( let i = 0; i < totalRemoteVideosDesktop; i++ ) {\n            elem[i].style.width = newWidth;\n        }\n    },\n\n\n    createDemoRemotes( str, total = 6 ) {\n        let i = 0;\n\n        let testInterval = setInterval( () => {\n            let newVid = document.createElement( 'video' );\n            newVid.id = `demo-${ i }-video`;\n            newVid.srcObject = str;\n            newVid.autoplay = true;\n            newVid.className = 'remote-video';\n\n            //video controls elements\n            let controlDiv = document.createElement( 'div' );\n            controlDiv.className = 'remote-video-controls';\n            controlDiv.innerHTML = `<i class=\"fa fa-microphone text-app pr-3 mute-remote-mic\" title=\"Mute\"></i>\n                <i class=\"fa fa-expand text-app expand-remote-video\" title=\"Expand\"></i>`;\n\n            //create a new div for card\n            let cardDiv = document.createElement( 'div' );\n            cardDiv.className = 'card card-sm';\n            cardDiv.id = `demo-${ i }`;\n            cardDiv.appendChild( newVid );\n            cardDiv.appendChild( controlDiv );\n\n            //put div in main-section elem\n            document.getElementById( 'videos' ).appendChild( cardDiv );\n\n            this.adjustVideoElemSize();\n\n            i++;\n\n            if ( i == total ) {\n                clearInterval( testInterval );\n            }\n        }, 2000 );\n    }\n};\n","/**\n * @author Sumit Chaudhari <sumit.nitsurat@gmail.com>\n * @date 5th January, 2019\n */\nimport h from './index.js';\nimport io from 'socket.io-client';\n\n    // if ( !room ) {\n    //     document.querySelector( '#room-create' ).attributes.removeNamedItem( 'hidden' );\n    // }\n\n    // else if ( !username ) {\n    //     document.querySelector( '#username-set' ).attributes.removeNamedItem( 'hidden' );\n    // }\n\n    // else {\n        \n\n        var pc = [];\n\n        let socket = io( '/stream' );\n\n        var socketId = '';\n        var myStream = '';\n        var screen = '';\n        var recordedStream = [];\n        var mediaRecorder = '';\n\n    export const loadRtc = (meetingId) => {\n        const room = meetingId;\n        let commElem = document.getElementsByClassName( 'room-comm' );\n        const username = sessionStorage.getItem( 'username' );\n        for ( let i = 0; i < commElem.length; i++ ) {\n            commElem[i].attributes.removeNamedItem( 'hidden' );\n        }\n        //Get user video by default\n        getAndSetUserStream();\n\n\n        socket.on( 'connect', () => {\n            //set socketId\n            socketId = socket.io.engine.id;\n\n\n            socket.emit( 'subscribe', {\n                room: room,\n                socketId: socketId\n            } );\n\n\n            socket.on( 'new user', ( data ) => {\n                socket.emit( 'newUserStart', { to: data.socketId, sender: socketId } );\n                pc.push( data.socketId );\n                init( true, data.socketId );\n            } );\n\n\n            socket.on( 'newUserStart', ( data ) => {\n                pc.push( data.sender );\n                init( false, data.sender );\n            } );\n\n\n            socket.on( 'ice candidates', async ( data ) => {\n                return data.candidate ? await pc[data.sender].addIceCandidate( new RTCIceCandidate( data.candidate ) ) : '';\n            } );\n\n\n            socket.on( 'sdp', async ( data ) => {\n                if ( data.description.type === 'offer' ) {\n                    const session = data.description ? await pc[data.sender].setRemoteDescription( new RTCSessionDescription( data.description ) ) : '';\n\n                    h.getUserFullMedia().then( async ( stream ) => {\n                        if ( !document.getElementById( 'local' ).srcObject ) {\n                            h.setLocalStream( stream );\n                        }\n\n                        //save my stream\n                        myStream = stream;\n\n                        stream.getTracks().forEach( ( track ) => {\n                            pc[data.sender].addTrack( track, stream );\n                        } );\n\n                        let answer = await pc[data.sender].createAnswer();\n\n                        await pc[data.sender].setLocalDescription( answer );\n\n                        socket.emit( 'sdp', { description: pc[data.sender].localDescription, to: data.sender, sender: socketId } );\n                    } ).catch( ( e ) => {\n                        console.error( e );\n                    } );\n                }\n\n                else if ( data.description.type === 'answer' ) {\n                    await pc[data.sender].setRemoteDescription( new RTCSessionDescription( data.description ) );\n                }\n            } );\n\n\n            socket.on( 'chat', ( data ) => {\n                h.addChat( data, 'remote' );\n            } );\n        } );\n\n\n        function getAndSetUserStream() {\n            h.getUserFullMedia().then( ( stream ) => {\n                //save my stream\n                myStream = stream;\n\n                h.setLocalStream( stream );\n            } ).catch( ( e ) => {\n                console.error( `stream error: ${ e }` );\n            } );\n        }\n\n\n        function sendMsg( msg ) {\n            let data = {\n                room: room,\n                msg: msg,\n                sender: username\n            };\n\n            //emit chat message\n            socket.emit( 'chat', data );\n\n\n            //add localchat\n            h.addChat( data, 'local' );\n        }\n\n\n\n        function init( createOffer, partnerName ) {\n            pc[partnerName] = new RTCPeerConnection( h.getIceServer() );\n\n            if ( screen && screen.getTracks().length ) {\n                screen.getTracks().forEach( ( track ) => {\n                    pc[partnerName].addTrack( track, screen );//should trigger negotiationneeded event\n                } );\n            }\n\n            else if ( myStream ) {\n                myStream.getTracks().forEach( ( track ) => {\n                    pc[partnerName].addTrack( track, myStream );//should trigger negotiationneeded event\n                } );\n            }\n\n            else {\n                h.getUserFullMedia().then( ( stream ) => {\n                    //save my stream\n                    myStream = stream;\n\n                    stream.getTracks().forEach( ( track ) => {\n                        pc[partnerName].addTrack( track, stream );//should trigger negotiationneeded event\n                    } );\n\n                    h.setLocalStream( stream );\n                } ).catch( ( e ) => {\n                    console.error( `stream error: ${ e }` );\n                } );\n            }\n\n\n\n            //create offer\n            if ( createOffer ) {\n                pc[partnerName].onnegotiationneeded = async () => {\n                    let offer = await pc[partnerName].createOffer();\n\n                    await pc[partnerName].setLocalDescription( offer );\n\n                    socket.emit( 'sdp', { description: pc[partnerName].localDescription, to: partnerName, sender: socketId } );\n                };\n            }\n\n\n\n            //send ice candidate to partnerNames\n            pc[partnerName].onicecandidate = ( { candidate } ) => {\n                socket.emit( 'ice candidates', { candidate: candidate, to: partnerName, sender: socketId } );\n            };\n\n\n\n            //add\n            pc[partnerName].ontrack = ( e ) => {\n                let str = e.streams[0];\n                if ( document.getElementById( `${ partnerName }-video` ) ) {\n                    document.getElementById( `${ partnerName }-video` ).srcObject = str;\n                }\n\n                else {\n                    //video elem\n                    let newVid = document.createElement( 'video' );\n                    newVid.id = `${ partnerName }-video`;\n                    newVid.srcObject = str;\n                    newVid.autoplay = true;\n                    newVid.className = 'remote-video';\n\n                    //video controls elements\n                    let controlDiv = document.createElement( 'div' );\n                    controlDiv.className = 'remote-video-controls';\n                    controlDiv.innerHTML = `<i class=\"fa fa-microphone text-app pr-3 mute-remote-mic\" title=\"Mute\"></i>\n                        <i class=\"fa fa-expand text-app expand-remote-video\" title=\"Expand\"></i>`;\n\n                    //create a new div for card\n                    let cardDiv = document.createElement( 'div' );\n                    cardDiv.className = 'card card-sm';\n                    cardDiv.id = partnerName;\n                    cardDiv.appendChild( newVid );\n                    cardDiv.appendChild( controlDiv );\n\n                    //put div in main-section elem\n                    document.getElementById( 'videos' ).appendChild( cardDiv );\n\n                    h.adjustVideoElemSize();\n                }\n            };\n\n\n\n            pc[partnerName].onconnectionstatechange = ( d ) => {\n                switch ( pc[partnerName].iceConnectionState ) {\n                    case 'disconnected':\n                    case 'failed':\n                        h.closeVideo( partnerName );\n                        break;\n\n                    case 'closed':\n                        h.closeVideo( partnerName );\n                        break;\n                }\n            };\n\n\n\n            pc[partnerName].onsignalingstatechange = ( d ) => {\n                switch ( pc[partnerName].signalingState ) {\n                    case 'closed':\n                        console.log( \"Signalling state is 'closed'\" );\n                        h.closeVideo( partnerName );\n                        break;\n                }\n            };\n        }\n\n\n\n        function shareScreen() {\n            h.shareScreen().then( ( stream ) => {\n                h.toggleShareIcons( true );\n\n                //disable the video toggle btns while sharing screen. This is to ensure clicking on the btn does not interfere with the screen sharing\n                //It will be enabled was user stopped sharing screen\n                h.toggleVideoBtnDisabled( true );\n\n                //save my screen stream\n                screen = stream;\n\n                //share the new stream with all partners\n                broadcastNewTracks( stream, 'video', false );\n\n                //When the stop sharing button shown by the browser is clicked\n                screen.getVideoTracks()[0].addEventListener( 'ended', () => {\n                    stopSharingScreen();\n                } );\n            } ).catch( ( e ) => {\n                console.error( e );\n            } );\n        }\n\n\n\n        function stopSharingScreen() {\n            //enable video toggle btn\n            h.toggleVideoBtnDisabled( false );\n\n            return new Promise( ( res, rej ) => {\n               const track = screen.getTracks().length ? screen.getTracks().forEach( track => track.stop() ) : '';\n\n                res();\n            } ).then( () => {\n                h.toggleShareIcons( false );\n                broadcastNewTracks( myStream, 'video' );\n            } ).catch( ( e ) => {\n                console.error( e );\n            } );\n        }\n\n\n\n        function broadcastNewTracks( stream, type, mirrorMode = true ) {\n            h.setLocalStream( stream, mirrorMode );\n\n            let track = type == 'audio' ? stream.getAudioTracks()[0] : stream.getVideoTracks()[0];\n\n            for ( let p in pc ) {\n                let pName = pc[p];\n\n                if ( typeof pc[pName] == 'object' ) {\n                    h.replaceTrack( track, pc[pName] );\n                }\n            }\n        }\n\n\n        function toggleRecordingIcons( isRecording ) {\n            let e = document.getElementById( 'record' );\n\n            if ( isRecording ) {\n                e.setAttribute( 'title', 'Stop recording' );\n                e.children[0].classList.add( 'text-danger' );\n                e.children[0].classList.remove( 'text-app' );\n            }\n\n            else {\n                e.setAttribute( 'title', 'Record' );\n                e.children[0].classList.add( 'text-app' );\n                e.children[0].classList.remove( 'text-danger' );\n            }\n        }\n\n\n        //Chat textarea\n        document.getElementById( 'chat-input' ).addEventListener( 'keypress', ( e ) => {\n            if ( e.which === 13 && ( e.target.value.trim() ) ) {\n                e.preventDefault();\n\n                sendMsg( e.target.value );\n\n                setTimeout( () => {\n                    e.target.value = '';\n                }, 50 );\n            }\n        } );\n\n\n        //When the video icon is clicked\n        document.getElementById( 'toggle-video' ).addEventListener( 'click', ( e ) => {\n            e.preventDefault();\n\n            let elem = document.getElementById( 'toggle-video' );\n\n            if ( myStream.getVideoTracks()[0].enabled ) {\n                e.target.classList.remove( 'fa-video' );\n                e.target.classList.add( 'fa-video-slash' );\n                elem.setAttribute( 'title', 'Show Video' );\n\n                myStream.getVideoTracks()[0].enabled = false;\n            }\n\n            else {\n                e.target.classList.remove( 'fa-video-slash' );\n                e.target.classList.add( 'fa-video' );\n                elem.setAttribute( 'title', 'Hide Video' );\n\n                myStream.getVideoTracks()[0].enabled = true;\n            }\n\n            broadcastNewTracks( myStream, 'video' );\n        } );\n\n\n        //When the mute icon is clicked\n        document.getElementById( 'toggle-mute' ).addEventListener( 'click', ( e ) => {\n            e.preventDefault();\n\n            let elem = document.getElementById( 'toggle-mute' );\n\n            if ( myStream.getAudioTracks()[0].enabled ) {\n                e.target.classList.remove( 'fa-microphone-alt' );\n                e.target.classList.add( 'fa-microphone-alt-slash' );\n                elem.setAttribute( 'title', 'Unmute' );\n\n                myStream.getAudioTracks()[0].enabled = false;\n            }\n\n            else {\n                e.target.classList.remove( 'fa-microphone-alt-slash' );\n                e.target.classList.add( 'fa-microphone-alt' );\n                elem.setAttribute( 'title', 'Mute' );\n\n                myStream.getAudioTracks()[0].enabled = true;\n            }\n\n            broadcastNewTracks( myStream, 'audio' );\n        } );\n\n\n        //When user clicks the 'Share screen' button\n        document.getElementById( 'share-screen' ).addEventListener( 'click', ( e ) => {\n            e.preventDefault();\n\n            if ( screen && screen.getVideoTracks().length && screen.getVideoTracks()[0].readyState != 'ended' ) {\n                stopSharingScreen();\n            }\n\n            else {\n                shareScreen();\n            }\n        } );\n\n\n       \n    // }\n};\n\n\n //When record button is clicked\nexport const record = ( type = 'screen' ) => {\n    /**\n     * Ask user what they want to record.\n     * Get the stream based on selection and start recording\n     */\n    console.log(\"recoerd is clien\")\n    if ( !mediaRecorder || mediaRecorder.state == 'inactive' ) {\n        if(type === 'screen') { \n            return recordScreen();\n        } else {\n            return recordVideo(); \n        }\n    }\n\n    else if ( mediaRecorder.state == 'paused' ) {\n        mediaRecorder.resume();\n    }\n\n    else if ( mediaRecorder.state == 'recording' ) {\n        mediaRecorder.stop();\n    }\n}\n\nfunction startRecording( stream ) {\n    const username = sessionStorage.getItem( 'username' );\n    mediaRecorder = new MediaRecorder( stream, {\n        mimeType: 'video/webm;codecs=vp9'\n    } );\n\n    mediaRecorder.start( 1000 );\n\n    mediaRecorder.ondataavailable = function ( e ) {\n        recordedStream.push( e.data );\n    };\n\n    mediaRecorder.onstop = function () {\n\n        h.saveRecordedStream( recordedStream, username );\n\n        setTimeout( () => {\n            recordedStream = [];\n        }, 3000 );\n    };\n\n    mediaRecorder.onerror = function ( e ) {\n        console.error( e );\n    };\n}\n\n\n//When user choose to record screen\nconst recordScreen = () => {\n\n    if ( screen && screen.getVideoTracks().length ) {\n        startRecording( screen );\n        return true;\n    }\n\n    else {\n        return h.shareScreen().then( ( screenStream ) => {\n            startRecording( screenStream );\n            return true;\n        } ).catch( () => { \n            //throw new Error('recording canceled');\n            return false;\n        } );\n    }\n}\n\n\n//When user choose to record own video\nconst recordVideo = () => {\n\n    if ( myStream && myStream.getTracks().length ) {\n        startRecording( myStream );\n        return true;\n    }\n\n    else {\n        h.getUserFullMedia().then( ( videoStream ) => {\n            startRecording( videoStream );\n            return true;\n        } ).catch( () => { return false; } );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function StreamActions(props) {\n  return (\n    <nav className=\"col-4 col-md-4 col-xs-12 offset-md-4 fixed-bottom rounded-0 d-print-none\" style={{zIndex: 999}}>\n            <div className=\"pull-right room-comm\" hidden>\n                <button className=\"btn btn-sm rounded-0 btn-no-effect mr-3 mb-4\" id='toggle-video' title=\"Hide Video\">\n                    <i className=\"fa fa-video fa-3x text-app\"></i>\n                </button>\n\n                <button className=\"btn btn-sm rounded-0 btn-no-effect mr-3 mb-4\" id='toggle-mute' title=\"Mute\">\n                    <i className=\"fa fa-microphone-alt fa-3x text-app\"></i>\n                </button>\n\n                <button className=\"btn btn-sm rounded-0 btn-no-effect mr-3 mb-4\" id='share-screen' title=\"Share screen\">\n                    <i className=\"fa fa-desktop fa-3x text-app\"></i>\n                </button>\n\n                <button className=\"btn btn-sm text-app pull-right btn-no-effect mr-3 mb-4\" id='toggle-chat-pane'>\n                    <i className=\"fa fa-comment fa-3x\"></i> <span className=\"badge badge-danger very-small font-weight-lighter\" id='new-chat-notification' hidden>New</span>\n                </button>\n            </div>\n        </nav>\n  );\n}\n","import React, { useState } from \"react\";\nconst RecordingView =  () => (<div className=\"custom-modal\" id='recording-options-modal' style={{display: 'none'}}>\n            <div className=\"custom-modal-content\">\n                <div className=\"row text-center\">\n                    <div className=\"col-md-6 mb-2\">\n                        <span className=\"record-option\" id='record-video'>Record video</span>\n                    </div>\n                    <div className=\"col-md-6 mb-2\">\n                        <span className=\"record-option\" id='record-screen'>Record screen</span>\n                    </div>\n                </div>\n\n                <div className=\"row mt-3\">\n                    <div className=\"col-md-12 text-center\">\n                        <button className=\"btn btn-outline-danger\" id='closeModal'>Close</button>\n                    </div>\n                </div>\n            </div>\n        </div>);\n\nexport default RecordingView;","import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Header from \"../HeaderPrimary\";\nimport { loadEvents } from \"../../helpers/events\"\nimport { loadRtc, record } from \"../../helpers/rtc\";\nimport StreamActions from \"../StreamActions\";\nimport RecodringView from \"./Recording\";\nimport Button from \"react-bootstrap/Button\";\n\nimport \"./room.css\";\nimport {\n    useParams,\n    useHistory\n  } from \"react-router-dom\";\nconst MeetingRoom = () => {\n    const {meetingId} = useParams();\n    const [isRecording, setIsRecording] = useState(false);\n    let {push} = useHistory();\n\n    useEffect(() => {\n        loadEvents();\n        loadRtc(meetingId);\n    }, [meetingId]);\n\n    const startRecording = async (type) => {\n            const isStarted = await record(type);\n            console.log(isStarted)\n            setIsRecording(isStarted);\n    }\n\n    const stopRecording = () => {\n            record();\n            setIsRecording(false);\n    }\n\n    return (\n        <>\n            <RecodringView />\n            <Header>\n                <div>\n                {!isRecording && <Button variant=\"outline-info\" onClick={() => startRecording('media')} style={{marginRight: 10}}>Record Video</Button>}{'  '}\n                {!isRecording &&<Button variant=\"outline-info\" onClick={() => startRecording('screen')} style={{marginRight: 10}}>Record Screen</Button>}{'   '}\n                {isRecording && <Button variant=\"outline-danger\" onClick={() => stopRecording()} style={{marginRight: 10}}>Stop Recording</Button>}{'   '}\n                <Button variant=\"danger\" onClick={() => push(\"/\")}>Leave Session</Button>{'  '}\n                </div>\n            </Header>\n\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <video className=\"local-video mirror-mode\" id='local' volume='0' autoPlay muted></video>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-md-12 main\" id='main-section'>\n                        <div className=\"row mt-2 mb-2\" id='videos'></div>\n                    </div>\n\n                    <div className=\"col-md-3 chat-col d-print-none mb-2 bg-app-secondary\" id='chat-pane' hidden>\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center h2 mb-3\">CHAT</div>\n                        </div>\n\n                        <div id='chat-messages'></div>\n\n                        <div className=\"row\">\n                            <textarea id='chat-input' className=\"form-control rounded-0 chat-box border-info\" rows='3' placeholder=\"Type here...\"></textarea>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <StreamActions />\n        </>);\n}\n\nexport default MeetingRoom;","import helpers from './index.js';\n\nexport const loadEvents = () => {\n    //When the chat icon is clicked\n    document.querySelector( '#toggle-chat-pane' ).addEventListener( 'click', ( e ) => {\n        let chatElem = document.querySelector( '#chat-pane' );\n        let mainSecElem = document.querySelector( '#main-section' );\n\n        if ( chatElem.classList.contains( 'chat-opened' ) ) {\n            chatElem.setAttribute( 'hidden', true );\n            mainSecElem.classList.remove( 'col-md-9' );\n            mainSecElem.classList.add( 'col-md-12' );\n            chatElem.classList.remove( 'chat-opened' );\n        }\n\n        else {\n            chatElem.attributes.removeNamedItem( 'hidden' );\n            mainSecElem.classList.remove( 'col-md-12' );\n            mainSecElem.classList.add( 'col-md-9' );\n            chatElem.classList.add( 'chat-opened' );\n        }\n\n        //remove the 'New' badge on chat icon (if any) once chat is opened.\n        setTimeout( () => {\n            if ( document.querySelector( '#chat-pane' ).classList.contains( 'chat-opened' ) ) {\n                helpers.toggleChatNotificationBadge();\n            }\n        }, 300 );\n    } );\n\n\n    //When the video frame is clicked. This will enable picture-in-picture\n    document.getElementById( 'local' ).addEventListener( 'click', () => {\n        if ( !document.pictureInPictureElement ) {\n            document.getElementById( 'local' ).requestPictureInPicture()\n                .catch( error => {\n                    // Video failed to enter Picture-in-Picture mode.\n                    console.error( error );\n                } );\n        }\n\n        else {\n            document.exitPictureInPicture()\n                .catch( error => {\n                    // Video failed to leave Picture-in-Picture mode.\n                    console.error( error );\n                } );\n        }\n    } );\n\n\n    //When the 'Create room\" is button is clicked\n    // document.getElementById( 'create-room' ).addEventListener( 'click', ( e ) => {\n    //     e.preventDefault();\n\n    //     let roomName = document.querySelector( '#room-name' ).value;\n    //     let yourName = document.querySelector( '#your-name' ).value;\n\n    //     if ( roomName && yourName ) {\n    //         //remove error message, if any\n    //         document.querySelector( '#err-msg' ).innerHTML = \"\";\n\n    //         //save the user's name in sessionStorage\n    //         sessionStorage.setItem( 'username', yourName );\n\n    //         //create room link\n    //         let roomLink = `${ window.location.origin }?room=${ roomName.trim().replace( ' ', '_' ) }_${ helpers.generateRandomString() }`;\n\n    //         //show message with link to room\n    //         document.querySelector( '#room-created' ).innerHTML = `Room successfully created. Click <a href='${ roomLink }'>here</a> to enter room. \n    //             Share the room link with your partners.`;\n\n    //         //empty the values\n    //         document.querySelector( '#room-name' ).value = '';\n    //         document.querySelector( '#your-name' ).value = '';\n    //     }\n\n    //     else {\n    //         document.querySelector( '#err-msg' ).innerHTML = \"All fields are required\";\n    //     }\n    // } );\n\n\n    //When the 'Enter room' button is clicked.\n    // document.getElementById( 'enter-room' ).addEventListener( 'click', ( e ) => {\n    //     e.preventDefault();\n\n    //     let name = document.querySelector( '#username' ).value;\n\n    //     if ( name ) {\n    //         //remove error message, if any\n    //         document.querySelector( '#err-msg-username' ).innerHTML = \"\";\n\n    //         //save the user's name in sessionStorage\n    //         sessionStorage.setItem( 'username', name );\n\n    //         //reload room\n    //         window.location.reload();\n    //     }\n\n    //     else {\n    //         document.querySelector( '#err-msg-username' ).innerHTML = \"Please input your name\";\n    //     }\n    // } );\n\n\n    document.addEventListener( 'click', ( e ) => {\n        if ( e.target && e.target.classList.contains( 'expand-remote-video' ) ) {\n            helpers.maximiseStream( e );\n        }\n\n        else if ( e.target && e.target.classList.contains( 'mute-remote-mic' ) ) {\n            helpers.singleStreamToggleMute( e );\n        }\n    } );\n\n\n    document.getElementById( 'closeModal' ).addEventListener( 'click', () => {\n        helpers.toggleModal( 'recording-options-modal', false );\n    } );\n}\n","import * as React from \"react\";\nimport {Navbar} from \"react-bootstrap\";\n\nconst Header = ({children}) => (\n    <Navbar className=\"justify-content-between bg-app\" sticky=\"top\" variant=\"light\">\n    <Navbar.Brand href=\"/\">\n      <img\n        alt=\"\"\n        src=\"/logo.svg\"\n        width=\"30\"\n        height=\"30\"\n        className=\"d-inline-block align-top\"\n      />{' '}\n      <span style={{color: \"#fff\", fontWeight: 600}}>Namaste Talk</span>\n    </Navbar.Brand>\n    {children || null}\n  </Navbar>\n);\n\nexport default Header;"],"sourceRoot":""}